# -*- mode: snippet -*-
# name: mp-module
# key: mp-module
# --
/**
 * @file   ${1:`(file-name-nondirectory (directory-file-name (file-name-directory (buffer-file-name))))`}/`(file-name-nondirectory (buffer-file-name))`
 * @author `(getenv "NAME")`
 * @date   `(format-time-string "%d.%m.%Y")`
 * @brief  $2
 *
 * The MIT License (MIT)
 *
 * Copyright (c) `(format-time-string "%Y")` `(getenv "NAME")`
 *
 * Permission is hereby granted, free of charge, to any person
 * obtaining a copy of this software and associated documentation
 * files (the "Software"), to deal in the Software without
 * restriction, including without limitation the rights to use, copy,
 * modify, merge, publish, distribute, sublicense, and/or sell copies
 * of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be
 * included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS
 * BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN
 * ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
 * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */
#include "py/mpconfig.h"

#if defined(MODULE_${1:$(upcase yas-text)}_ENABLED) && MODULE_${1:$(upcase yas-text)}_ENABLED == 1

#include "py/obj.h"
#include "py/runtime.h"

$0

STATIC const mp_rom_map_elem_t $1_globals_table[] = {
    { MP_OBJ_NEW_QSTR(MP_QSTR___name__), MP_OBJ_NEW_QSTR(MP_QSTR_$1) },
};

STATIC MP_DEFINE_CONST_DICT(
    mp_module_$1_globals,
    $1_globals_table
    );

const mp_obj_module_t mp_module_$1 = {
    .base = { &mp_type_module },
    .globals = (mp_obj_dict_t*)&mp_module_$1_globals,
};

MP_REGISTER_MODULE(MP_QSTR_$1, mp_module_$1, MODULE_${1:$(upcase yas-text)}_ENABLED);

#endif /* defined(MODULE_${1:$(upcase yas-text)}_ENABLED) && MODULE_${1:$(upcase yas-text)}_ENABLED == 1 */
