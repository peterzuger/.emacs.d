# -*- mode: snippet -*-
# name: mp-type
# key: mp-type
# --
typedef struct _${1:`(mpy-mod-name (buffer-file-name))`}_$2_obj_t{
    // base represents some basic information, like type
    mp_obj_base_t base;
}$1_$2_obj_t;

mp_obj_t $1_$2_make_new(const mp_obj_type_t* type, size_t n_args, size_t n_kw, const mp_obj_t* args);
static void $1_$2_print(const mp_print_t* print, mp_obj_t self_in, mp_print_kind_t kind);


static const mp_rom_map_elem_t $1_$2_locals_dict_table[] = {
    // class methods
};
static MP_DEFINE_CONST_DICT($1_$2_locals_dict, $1_$2_locals_dict_table);


MP_DEFINE_CONST_OBJ_TYPE(
    $1_$2_type,
    MP_QSTR_$2,
    MP_TYPE_FLAG_NONE,
    print, $1_$2_print,
    make_new, $1_$2_make_new,
    locals_dict, &$1_$2_locals_dict
    );

/**
 * Python: $1.$2()
 */
mp_obj_t $1_$2_make_new(const mp_obj_type_t* type,
                                           size_t n_args,
                                           size_t n_kw,
                                           const mp_obj_t* args){
    mp_arg_check_num(n_args, n_kw, 0, 0, false);

    // raises MemoryError
    $1_$2_obj_t* self = mp_obj_malloc($1_$2_obj_t, type);

    return MP_OBJ_FROM_PTR(self);
}

/**
 * Python: print($1.$2())
 * @param obj
 */
static void $1_$2_print(const mp_print_t* print,
                                           mp_obj_t self_in, mp_print_kind_t kind){
    //$1_$2_obj_t* self = MP_OBJ_TO_PTR(self_in);
    mp_printf(print, "$2()");
}
